

@model StockViewModel.JobDescriptionVM

@{
    ViewBag.Title = "التخصص الوظيفي";

}
<link href="~/DataTables/datatables.min.css" rel="stylesheet" />
@Scripts.Render("~/Content/chosenJavaScript")
@Styles.Render("~/Content/chosenCSS")
@section styles{
    <style>
        .modal-body {
            height: auto;
        }
    </style>
}
<div class="text-center">
    <h3 class="center info">التخصصات</h3>
</div>

@*Creat apopup Modal For Add And Edit*@
<div class="modal fade" id="MyModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="Modaltitle"></h4>
            </div>
            <div class="modal-body" style="height:226px;overflow-y: hidden!important">
                <form id="form">

                    @Html.HiddenFor(m => m.ID, new { @id = "JobDescriptionID" })
                    <div class="form-group">
                        @Html.Label("التخصص", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "التخصص" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        @Html.Label("الوظيفه", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(x => x.JobID, ViewBag.Jobs as SelectList, "--اختر الوظيفه--", htmlAttributes: new { @class = "form-control validateAlways", style = "visibility: hidden;position: absolute;display:inline !important" })

                            @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="text-left">
                    <a href="#" class="btn btn-primary" id="SaveJobDescription">اضافه</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">الغاء</a>

                </div>
            </div>
        </div>
    </div>
</div>


<div class="container" style="margin-top:3%">
    <button class="btn btn-primary" onclick="AddJobDescripstion(0)">أضافه تخصص </button>
    <table class="table table-striped" id="JobDescTable">
        <thead>
            <tr>
                <th>م</th>
                <th>التخصص</th>
                <th>الوظيفه</th>
                <th>تعديل</th>
                <th>حذف</th>
            </tr>
        </thead>


    </table>
</div>


@section scripts
{
    <script src="~/DataTables/datatables.min.js"></script>

    <script>
        function Save() {
            if ($("#form").valid()) {
                var data = $("#form").serialize();
                $.ajax({
                    type: "post",
                    url:'@Url.Action("Save","JobDescription")',
                    data: data,
                    success: function (response) {
                        if (response.msg == false) {
                            toastr.error(' ', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                            AddJobDescripstion(0, data.split("&")[2].split("=")[1]);
                        }

                        else if (data.split("&")[0] == "ID=0") {
                            $("#JobDescTable").DataTable().ajax.reload();
                            toastr.success('تم حفظ نوع المصروف', 'اشعار', { timeOut: 4000 });
                            AddJobDescripstion(0, data.split("&")[2].split("=")[1]);
                        }
                        else {
                            $("#JobDescTable").DataTable().ajax.reload();
                            toastr.success('تم تعديل نوع المصروف', 'اشعار', { timeOut: 4000 });
                            $("#MyModal").modal("hide")
                        }
                    },
                    fail: function () {
                        toastr.error(' عمليه غير ناجحه ', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                    },
                    error: function () {
                        toastr.error('عمليه غير ناجحه', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                    }
                });
            }
            else {
                toastr.error('برجاءادخال الحقول', 'اشعار', { timeOut: 3000 });
            }
        }
        function AddJobDescripstion(ID, JobIDVal = "") {
            $("#form")[0].reset();
            $("#Modaltitle").html("إضافه نوع مصروف");
            $("#JobDescriptionID").val("0");
            $("#MyModal").modal()
            $("#Name").focus();
            $("#JobID").val(JobIDVal);
                      $('#JobID').trigger('chosen:updated');
        }

        function EditJobDescription(ID) {
            var url ='@Url.Action("Getbyid","JobDescription")' + '?id=' + ID;  
            $("#Modaltitle").html("تعديل التخصص");
            $.ajax({
                type: "GET",
                url: url,
                success: function (rs) {
                    $("#MyModal").modal();
                    $("#JobDescriptionID").val(rs.data.ID);
                    $("#Name").val(rs.data.Name);
                    $("#JobID").val(rs.data.JobID);
                      $('#JobID').trigger('chosen:updated');


                }
            })
        }

        function DeleteJobdescription(ID) {
                bootbox.confirm({
            title: "عملية حذف ",
            message: "هل انت متاكد من عملية الحذف ؟",
            size: 'small',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i> رجوع',
                    className: 'btn-info'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> تاكيد',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    deleteRecord(ID)
                }
                else {
                    return true;
                }
            }
        });

    }
             function deleteRecord(id) {
                 $.ajax({
                     type: "post",
                     url: '@Url.Action("Delete","JobDescription")' + '?id=' + id,

                     success: function (respons) {
                         if (respons.success) {

                             toastr.success('تمت حذف التخصص', respons.msg, { timeOut: 3000 });
                             $("#JobDescTable").DataTable().ajax.reload();
                         }
                         else {
                             toastr.error('عمليه غير ناجحه', 'هناك بيانات معتمده علي هذاه التخصص  لايمكن الحذف حاليا ', { timeOut: 1000 });
                         }

                     },

                     fail: function (xhr, msg, errorThrown) {
                         toastr.error('عمليه غير ناجحه', msg, { timeOut: 1000 });

                     },
                     error: function (xhr, statusText, errorThrown) {
                         toastr.error('عمليه غير ناجحه', 'هناك بيانات معتمده علي هذا التخصص  لايمكن حذفه حاليا ', { timeOut: 1000 });
                     }


                 });

        }





        $('#Name').on('keydown', function (e) {
            if (e.which == 13) {
                e.preventDefault();
                Save();
            }
        });

        $("#SaveJobDescription").click(function () {
            Save();
        });


        //datatable function
        $(document).ready(function () {
            var t = $('#JobDescTable').DataTable({
                "ajax": {
                    'url':'@Url.Action("Getall","JobDescription")',
                    'type': "GET"
                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },

                    { "data": "Name" },
                    { "data": "Jobname" },
                    {
                        "data": "ID", "render": function (data) {
                            if (data == 1 || data == 2) {
                                return "";
                            }
                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditJobDescription(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                        }
                    },
                    {
                        "data": "ID", "render": function (data) {
                            if (data == 1 || data == 2) {
                                return "";
                            }
                            return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteJobdescription(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                    },


                ],
                "language": {
                 "sEmptyTable":     "ليست هناك بيانات متاحة في الجدول",
	"sLoadingRecords": "جارٍ التحميل...",
	"sProcessing":   "جارٍ التحميل...",
	"sLengthMenu":   "أظهر _MENU_ مدخلات",
	"sZeroRecords":  "لم يعثر على أية سجلات",
	"sInfo":         "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
	"sInfoEmpty":    "يعرض 0 إلى 0 من أصل 0 سجل",
	"sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
	"sInfoPostFix":  "",
	"sSearch":       "ابحث:",
	"sUrl":          "",
	"oPaginate": {
		"sFirst":    "الأول",
		"sPrevious": "السابق",
		"sNext":     "التالي",
		"sLast":     "الأخير"
	},
	"oAria": {
		"sSortAscending":  ": تفعيل لترتيب العمود تصاعدياً",
		"sSortDescending": ": تفعيل لترتيب العمود تنازلياً"
	}                },
                info: false,

            })
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
               $("#JobID").chosen({
                width: '100%',
                no_results_text: "لايوجد وظيفه بهذا الاسم",
                search_contains: true
               });
            $("#JobID").css("display", "");

        });

    </script>
}




