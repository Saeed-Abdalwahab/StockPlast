<button class="btn btn-primary" id="Addnew" onclick="AddTOstockreturn(0, $('#demondorderdetailsid').val())">اضافه مرتجع</button>
<table id="returnedPurchaseInvoice" class="display table-responsive-md" style="width:100%;">
    <thead>
        <tr>
            <th>م</th>
            <th>رقم الاذن</th>
            <th>تاريخ الاذن</th>
            <th>وزن </th>
            <th>المخزن</th>
            <th>الملاحظات</th>
            @*<th style="width:15px">تعديل</th>*@
            <th style="width:15px">تفاصيل</th>
            @*<th style="width:15px">حذف</th>*@
        </tr>
    </thead>
</table>
@using (Ajax.BeginForm("ConfirmDeleteToStockReturn", "ReturnToStock", new AjaxOptions() { OnSuccess = "deletePurchaseInvoicereturned" }))
{

    <div class="modal fade" id="deletePurchaseInvoicereturned" role="dialog">
        <div class="modal-dialog modal-sm">

            <div class="modal-content" style="padding:20px">
                <div class="modal-body" id="dataDELreturned">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-default">Yes</button>
                </div>
            </div>
        </div>
    </div>
}

    <script>


    $(document).ready(function () {
        debugger
            var t = $('#returnedPurchaseInvoice').DataTable({
                "ajax": {
                    'url': "@Url.Action("GetreturnedItemByItemID", "ReturnToStock")"+"?FromStockID="+$("#FromStockID").val()+"&Demondorderdetailsid="+$("#demondorderdetailsid").val(),
                //     'processData': "false",
                //'contentType': "false",
                //    data: function (d) {
                //        return $.extend({}, d, {
                //            FromStockID: FromStockID,
                //        Demondorderdetailsid:demondorderdetailsid

                //        });
                //    },
                    'type': "GET",

                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },
                    { "data": "InvoiceSerial" },
                    {
                        "data": "InvoiceDate",
                        "render": function (data) {
                            var date = new Date(parseInt(data.substr(6)));
                            var month = date.getMonth() + 1
                            return date.getFullYear() + "/" + month + "/" + date.getDate();
                        }
                    },
                    { "data": "Weight" },
                    { "data": "StoreName" },
                    { "data": "Notes" },
                    //{
                    //    "data": "ID", "width": "20px", "render": function (data) {
                    //        return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='detailsTOstockreturn(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                    //    }
                    //},
                    {
                        "data": "ID", "width": "20px", "render": function (data) {
                            return "<botton class='btn btn-info ED' style='margin-top:3px' onclick='AddTOstockreturn(" + data + ")'><span class='glyphicon glyphicon-eye-open'></span></botton>"
                        }
                    },
                    //{
                    //    "data": "ID", "width": "20px", "render": function (data) {
                    //        return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='deletereturntostock(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                    //    }
                    //},


                ],
                "columnDefs": [{
                    "orderable": false,
                    "targets": [2, 3, 4, 5],

                }],
                "order": [[1, 'asc']],

                "language": {
                                     "sEmptyTable":     "ليست هناك بيانات متاحة في الجدول",
	"sLoadingRecords": "جارٍ التحميل...",
	"sProcessing":   "جارٍ التحميل...",
	"sLengthMenu":   "أظهر _MENU_ مدخلات",
	"sZeroRecords":  "لم يعثر على أية سجلات",
	"sInfo":         "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
	"sInfoEmpty":    "يعرض 0 إلى 0 من أصل 0 سجل",
	"sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
	"sInfoPostFix":  "",
	"sSearch":       "ابحث:",
	"sUrl":          "",
	"oPaginate": {
		"sFirst":    "الأول",
		"sPrevious": "السابق",
		"sNext":     "التالي",
		"sLast":     "الأخير"
	},
	"oAria": {
		"sSortAscending":  ": تفعيل لترتيب العمود تصاعدياً",
		"sSortDescending": ": تفعيل لترتيب العمود تنازلياً"
	}
                },
                info: false,

            })



            t.on('order.dt search.dt', function () {
                if (!t.data().any()) {
                    $("#Addnew").css("display", "block")
                }
                else {
                    $("#Addnew").css("display", "none")
                }
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
        })

    function AddTOstockreturn(ID) {
        
        var demondorderdetails=$("#demondorderdetailsid").val();
            $.ajax({

                url: "@Url.Action("AddTOstockreturned", "ReturnToStock")",
                data: { ToStockid: ID, FromStockid: FromStockID,demondorderdetailsid:demondorderdetails },
                type: "Get",

                success: function (rs) {
                    if (rs.alert.type) {
                        $("#retuenedcontet").html(rs.data)
                    }
                    else {
                        showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                    }


                },
            })
        }

        function cancelsavereturned() {

            $.ajax({
                url: "@Url.Action("CancelSave", "ReturnToStock")",
                type: "GET",
                success: function (rs) {
                    if (rs.alert.type) {
                        $("#retuenedcontet").html(rs.data)
                        showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                    }

                }
            })
        }

        function deletereturntostock(id) {
            debugger
            $.ajax({

                url: "@Url.Action("DeleteToStockReturn", "ReturnToStock")",
                data: { ID: id },
                type: "POST",

                success: function (rs) {
                    if (rs.alert.type) {
                        $("#dataDELreturned").html(rs.data)
                        $("#deletePurchaseInvoicereturned").css("z-index", "9999999")
                        $("#deletePurchaseInvoicereturned").modal("show")

                    }
                    else {
                        showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                    }
                },
            })
        }

    function deletePurchaseInvoicereturned(rs) {
        if (rs.alert.type) {
            var TotalItem = parseFloat($("#Totalx").val()) + parseFloat(rs.TotalReturn);
            $("#Addnew").css("display", "none")
            $("#Totalx").val(TotalItem)
            $("#Addnew").css("display", "block")
            $("#returnedPurchaseInvoice").DataTable().ajax.reload()
            $("#deletePurchaseInvoicereturned").modal("hide")
            showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)

        }
        else {
            showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
        }

    }

    function detailsTOstockreturn(id) {
        $.ajax({

            url: "@Url.Action("DetailsInvoiceID", "ReturnToStock")",
            data: { ID: id },
            type: "Get",

            success: function (rs) {
                if (rs.alert.type) {
                    $("#retuenedcontet").html(rs.data)
                }
                else {
                    showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                }


            },
        })
    }
    </script>