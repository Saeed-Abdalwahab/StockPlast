<button class="btn btn-primary" id="AddFinishItem" onclick="AddTOstockFinish(0, $('#demondorderdetailsid').val())">اضافه تام</button>
<table id="PurchaseInvoice" class="display table-responsive-md" style="width:100%;">
    <thead>
        <tr>
            <th></th>
            <th>م</th>
            <th>رقم الاذن</th>
            <th>تاريخ الاذن</th>
            <th>كميه التام</th>
            <th>المخزن</th>
            <th>الملاحظات</th>
            <th style="width:auto">العمليه</th>
        </tr>
    </thead>
</table>

@using (Ajax.BeginForm("ConfirmDeleteToStockReturn", "FinshToStock", new AjaxOptions() { OnSuccess = "deletePurchaseInvoicefinish" }))
{
    <div class="modal fade" id="deletePurchaseInvoicefinish" role="dialog">
        <div class="modal-dialog modal-sm">

            <div class="modal-content" style="padding:20px">
                <div class="modal-body" id="datafinish">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">الغاء</button>
                    <button type="submit" class="btn btn-default">حذف</button>
                </div>
            </div>
        </div>
    </div>
}

<script>


    $(document).ready(function () {
        debugger
        var t = $('#PurchaseInvoice').DataTable({
            "ajax": {
                'url': "@Url.Action("GetFinshItemByItemID", "FinshToStock")" + "?FromStockID=" + $("#FromStockID").val() +"&Demondorderdetailsid="+$("#demondorderdetailsid").val(),
             
                'type': "GET",

            },
            "columns": [
                { "data": "InvoiceStatus", visible: false, orderable: false },

                {

                    "data": null, "render": function (data, type, full, meta) {
                        return meta.row + 1;
                    }
                },
                { "data": "InvoiceSerial" },
                {
                    "data": "InvoiceDate",
                    "render": function (data) {
                        if (data == "") {
                            return "";
                        }
                        var date = new Date(parseInt(data.substr(6)));
                        var month = date.getMonth() + 1
                        if (data != "") {
                            return date.getFullYear() + "/" + month + "/" + date.getDate();
                        }
                        else {
                            return "";
                        }
                    }
                },
                { "data": "Weight" },
                { "data": "StoreName" },
                { "data": "Notes" },
                {
                    "data": "ID", "width": "auto", "render": function (data, type, row, meta) {
                        if (row.InvoiceStatus == 1) {

                            var Editstr = "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='AddTOstockFinish(" + data + "," + row.demondordid + ")'><span class='glyphicon glyphicon-pencil'></span></botton>";
                            var Deletestr = "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='deletefinishtostock(" + data + "," + row.demondordid + ")'><span class='glyphicon glyphicon-trash'></span></botton>";
                            return Editstr + Deletestr;
                        }
                        else {
                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='AddTOstockFinish(" + data + "," + row.demondordid + ")'><span class='glyphicon glyphicon-eye-open'></span></botton>";
                        }
                    }
                }
            ],
            "columnDefs": [{
                "orderable": false,
                "targets": [4, 5, 6, 7],

            }],
            "order": [[1, 'asc']],

            "language": {
                "sEmptyTable": "ليست هناك بيانات متاحة في الجدول",
                "sLoadingRecords": "جارٍ التحميل...",
                "sProcessing": "جارٍ التحميل...",
                "sLengthMenu": "أظهر _MENU_ مدخلات",
                "sZeroRecords": "لم يعثر على أية سجلات",
                "sInfo": "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
                "sInfoEmpty": "يعرض 0 إلى 0 من أصل 0 سجل",
                "sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
                "sInfoPostFix": "",
                "sSearch": "ابحث:",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": "الأول",
                    "sPrevious": "السابق",
                    "sNext": "التالي",
                    "sLast": "الأخير"
                },
                "oAria": {
                    "sSortAscending": ": تفعيل لترتيب العمود تصاعدياً",
                    "sSortDescending": ": تفعيل لترتيب العمود تنازلياً"
                }
            },
            info: false,

        });



        t.on('order.dt search.dt', function () {
            if ($("#DEMONDORDERDETAILSSTATUS").val() == 2 || $("#DEMONDORDERDETAILSSTATUS").val() == "2") {
                $("#AddFinishItem").css("display", "none");
            }
            else {
                     if (!t.data().any()) {
                $("#AddFinishItem").css("display", "block")
            }
            else {
                $("#AddFinishItem").css("display", "none")
            }
            }
       
            t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                cell.innerHTML = i + 1;
            });
        }).draw();
                
    });
    function AddTOstockFinish(ID,demondorderdetails) {
        $.ajax({
            url: "@Url.Action("AddTOstockFinish", "FinshToStock")",
            data: { ToStockid: ID, FromStockid: FromStockID ,demondorderdetailsid:demondorderdetails},
            type: "Get",

            success: function (rs) {
                if (rs.alert.type) {
                    $("#completedcontent").html(rs.data)
                }
                else {
                    showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                }


            },
        })
    }

    function cancelsavefinish() {
        $.ajax({
            url: "@Url.Action("CancelSave", "FinshToStock")",
            type: "GET",
            success: function (rs) {
                if (rs.alert.type) {
                    $("#completedcontent").html(rs.data)
                    showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                }

            }
        })
    }

    function deletefinishtostock(id,demonorderdet) {
        debugger
        $.ajax({

            url: "@Url.Action("DeleteToStockReturn", "FinshToStock")",
            data: { ID: id ,demonorderdetailsid:demonorderdet},
            type: "POST",

            success: function (rs) {
                if (rs.alert.type) {
                    $("#datafinish").html(rs.data)
                    $("#deletePurchaseInvoicefinish").css("z-index", "9999999")
                    $("#deletePurchaseInvoicefinish").modal("show")


                }
                else {
                    showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                }
            }
        })
    }

    function deletePurchaseInvoicefinish(rs) {
        debugger
        if (rs.alert.type) {
            var TotalItem = parseFloat($("#Totalx").val()) + parseFloat(rs.TotalFinish);
            $("#Totalx").val(TotalItem)
            $("#PurchaseInvoice").DataTable().ajax.reload()
            $("#deletePurchaseInvoicefinish").modal("hide")
            showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
            AddTOstockreturn();

        }
        else {
            showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
            AddTOstockreturn();

        }
    }

    function detailsPurchaseInvoicefinish(id) {
        $.ajax({

            url: "@Url.Action("DetailsInvoiceID", "FinshToStock")",
            data: { ID: id },
            type: "Get",

            success: function (rs) {
                if (rs.alert.type) {
                    $("#completedcontent").html(rs.data)
                }
                else {
                    showAlert(rs.alert.AlertType, rs.alert.ErrorMessage)
                }


            },
        })
    }
</script>