@model StockViewModel.ExpenseDetailsVM

@{
    ViewBag.Title = "المصروفات ";

}
<link href="~/DataTables/datatables.min.css" rel="stylesheet" />
<link href="~/Content/toastr.min.css" rel="stylesheet" />
@Styles.Render("~/Content/chosenCSS")

<div class="text-center">
    <h3 class="center info">المصروفات اليوميه</h3>
</div>

<div class="modal fade bd-example-modal-lg" id="MyModal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="Modaltitle"></h4>
            </div>
            <div class="modal-body" style="height:226px;overflow-y: hidden!important">
                <form id="form">
                    <div class="form-horizontal">
                        @Html.HiddenFor(m => m.ExpDet_id, new { @id = "ExpenseID" })
                        <div class="form-group">
                            @Html.Label("نوع المصروف", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.exp_id, ViewBag.expenses as SelectList, "--اختر النوع--", new { @class = "form-control validateAlways", style = "visibility: hidden;position: absolute;display:inline !important" })
                                @Html.ValidationMessageFor(model => model.exp_id, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("قيمه المصروف", htmlAttributes: new { @class = "control-label col-md-2" ,type="number"})
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ExpDet_value, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ExpDet_value, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("البيان", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ExpDet_notes, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ExpDet_notes, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("الخزينه", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(x => x.safe_id, ViewBag.safes as SelectList, "--اختر الخزينه--", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.safe_id, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("التاريخ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ExpDet_Date, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ExpDet_Date, "", new { @class = "text-danger" })
                            </div>
                            @Html.Label("الحاله", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EnumDropDownListFor(x => x.ExpDet_status, "--اختر حاله --", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ExpDet_status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="text-left">
                    <a href="#" class="btn btn-primary" id="SaveexpenseDet">اضافه</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">الغاء</a>

                </div>
            </div>
        </div>
    </div>
</div>

<div id="DeletDiv" class="d-none">

</div>

<div class="container" style="margin-top:3%">
    <button class="btn btn-primary" onclick="AddExpense(0)">أضافه مصروف </button>
    <table class="table table-striped" id="ExpenseTable">
        <thead>
            <tr>
                <th>م</th>
                <th>نوع المصروف</th>
                <th>قيمه المصروف</th>
                <th>الخزينه</th>
                <th>التاريخ</th>
                <th>حاله المصروف</th>
                <th>ملاحظات</th>
                <th>تعديل</th>
                <th>حذف</th>
            </tr>
        </thead>


    </table>
</div>


@section scripts
{
    <script src="~/DataTables/datatables.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    @Scripts.Render("~/Content/chosenJavaScript")

<script>
        function GetDate(data) {
            var date = new Date(parseInt(data.substr(6)));
            var month = date.getMonth() + 1
            return date.getFullYear() + "/" + month + "/" + date.getDate();
        }
        function Save() {
            if ($("#form").valid()) {

                var data = $("#form").serialize();
                $.ajax({
                    type: "post",
                    url: "@Url.Action("Save", "ExpenseDetails")",
                    data: data,
                    success: function (response) {
                        if (response.msg == "true") {
                            if (data.split("&")[0] == "exp_id=0") {
                                $("#ExpenseTable").DataTable().ajax.reload();
                                toastr.success('تم حفظ المصروف يومي', 'اشعار', { timeOut: 4000 });
                                AddExpense(0);
                            }
                            else {
                                $("#ExpenseTable").DataTable().ajax.reload();
                                toastr.success('تم تعديل المصروف يومي', 'اشعار', { timeOut: 4000 });
                                $("#MyModal").modal("hide")
                            }
                        }
                        else if (response.msg == "false") {
                            toastr.error('عمليه غير ناجحه', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });

                        }
                        else {
                            toastr.error('عمليه غير ناجحه', response.msg , { timeOut: 3000 });

                        }
                    },
                    fail: function () {
                        toastr.error('الاسم مسجل بالفعل', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                    },
                    error: function () {
                        toastr.error('عمليه غير ناجحه', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                    }
                });
            }
            else {
                toastr.error('برجاءادخال الحقول', 'اشعار', { timeOut: 3000 });
            }
        }
        function AddExpense(exp_id) {
            $("#form")[0].reset();
            $("#Modaltitle").html("إضافه  مصروف يومي");
            $("#ExpenseID").val("0");
            var today = new Date();
            var date = today.getFullYear() + '/' + (today.getMonth() + 1) + '/' + today.getDate();
            $("#ExpDet_Date").val(date);
                                $("#exp_id").val("");
                      $('#exp_id').trigger('chosen:updated');

            $("#MyModal").modal()
        }

    function EditExpense(ExpDet_id) {
        
            var url = "@Url.Action("getExpense", "ExpenseDetails")" +"?ExpDet_id=" + ExpDet_id;
            $("#Modaltitle").html("تعديل  المصروف يومي");
            $.ajax({
                type: "GET",
                url: url,
                success: function (rs) {
                    $("#MyModal").modal();
                    $("#ExpenseID").val(rs.data.ExpDet_id);
                    $("#ExpDet_Date").val(GetDate(rs.data.ExpDet_Date));
                    $("#safe_id").val(rs.data.safe_id);
                    $("#exp_id").val(rs.data.exp_id);

                    $("#ExpDet_value").val(rs.data.ExpDet_value);
                    $("#ExpDet_notes").val(rs.data.ExpDet_notes);
                    $("#ExpDet_status").val(rs.data.ExpDet_status);
                      $('#exp_id').trigger('chosen:updated');

                }
            })
        }

        function DeleteExpense(ExpDet_id) {
            var url = "@Url.Action("GetDelete", "ExpenseDetails")"+"?ExpDet_id=" + ExpDet_id;
            $("#MyModal").modal("hide");
            $.ajax({
                type: "GET",
                dataType: 'html',
                url: url,
                success: function (data) {
                    $('#DeletDiv').html(data);
                    $('#DeletDiv .modal').modal('show');
                },
                fail: function (xhr, textStatus, errorThrown) {
                    toastr.error('لا يمكن حذف النوع', 'حدث خطأ اثناء الاضافه برجاء المحاوله مره اخري ', { timeOut: 3000 });
                }
            })
        }

        function DeletSuccess() {
            $('#DeletDiv .modal').modal('hide');
            $("#ExpenseTable").DataTable().ajax.reload();
            toastr.success('تم حذف  المصروف', 'اشعار', { timeOut: 4000 });
        }



        $("#SaveexpenseDet").click(function () {
            Save();
        });


        //datatable function
    $(document).ready(function () {

                    $(function () {
                $('#ExpDet_Date').datepicker({
                    dateFormat: 'yy/mm/dd',
                    minView: 2,
                });


            });

                 $("#exp_id").chosen({
                    width: '100%',
            no_results_text: 'لا يوجد مورد بهذا الاسم',
                     search_contains: true,
                });
                $("#exp_id").css("display", "");

            var t = $('#ExpenseTable').DataTable({
                "ajax": {
                    'url': "@Url.Action("GetexpenseDet", "ExpenseDetails")",
                    'type': "GET"
                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },

                    { "data": "expensename" },
                    { "data": "ExpDet_value" },
                    { "data": "safename" },
                    {
                        "data": "ExpDet_Date",
                        "render": function (data) {
                            var date = new Date(parseInt(data.substr(6)));
                            var month = date.getMonth() + 1
                            return date.getFullYear() + "/" + month + "/" + date.getDate();
                        }
                    },
                    { "data": "ExpDet_statusName" },
                    { "data": "ExpDet_notes" },
                    {
                        "data": "ExpDet_id", "render": function (data, type, row, meta) {
                             if (row.ExpDet_status == @((int)PlasticStatic.Enums.IncomeDetailsStatus.Finish)) {
                                return ""
                            }
                            else {
                            return "<botton class='btn btn-primary ED' style='margin-top:3px' onclick='EditExpense(" + data + ")'><span class='glyphicon glyphicon-pencil'></span></botton>"
                        }
                        }
                    },
                    {
                        "data": "ExpDet_id", "render": function (data, type, row, meta) {

                            if (row.ExpDet_status == @((int)PlasticStatic.Enums.IncomeDetailsStatus.Finish)) {
                                return ""
                            }
                            else {
                            return "<botton class='btn btn-danger ED' style='margin-top:3px' onclick='DeleteExpense(" + data + ")'><span class='glyphicon glyphicon-trash'></span></botton>"
                        }
                        }
                    },


                ],
                "language": {
                                     "sEmptyTable":     "ليست هناك بيانات متاحة في الجدول",
	"sLoadingRecords": "جارٍ التحميل...",
	"sProcessing":   "جارٍ التحميل...",
	"sLengthMenu":   "أظهر _MENU_ مدخلات",
	"sZeroRecords":  "لم يعثر على أية سجلات",
	"sInfo":         "إظهار _START_ إلى _END_ من أصل _TOTAL_ مدخل",
	"sInfoEmpty":    "يعرض 0 إلى 0 من أصل 0 سجل",
	"sInfoFiltered": "(منتقاة من مجموع _MAX_ مُدخل)",
	"sInfoPostFix":  "",
	"sSearch":       "ابحث:",
	"sUrl":          "",
	"oPaginate": {
		"sFirst":    "الأول",
		"sPrevious": "السابق",
		"sNext":     "التالي",
		"sLast":     "الأخير"
	},
	"oAria": {
		"sSortAscending":  ": تفعيل لترتيب العمود تصاعدياً",
		"sSortDescending": ": تفعيل لترتيب العمود تنازلياً"
	}
                },
                info: false,

            })
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

        });

</script>
}




